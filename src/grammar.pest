search = _{ SOI ~ expression ~ EOI }
expression = _{ or_expr }
or_expr = { and_expr ~ (or ~ and_expr)* }
and_expr = { comparison_expr ~ (and ~ comparison_expr)* }
comparison_expr = { tag_with_regex ~ comparison_op ~ value_with_regex | not_expr }
not_expr = { not ~ not_expr | primary }
primary = _{ "{" ~ bookmark ~ "}" | "(" ~ expression ~ ")" | tag_with_regex }
tag_with_regex = @{ (tag_chars_without_parentheses | regex_group)+ }
value_with_regex = @{ tag_with_regex }

comparison_op = _{ equal | inequal | less_equal | less | greater_equal | greater }
less = { "<" }
less_equal = { "<=" }
greater = { ">" }
greater_equal = { ">=" }
equal = { "==" }
inequal = { "!=" }

unary_op = _{ not }
not = { ^"not" | "!" }

binary_op = _{ and | or }
and = { ^"and" | "&&" }
or = { ^"or" | "||" }

bookmark = { filesystem_path }



comma_separated_tags_with_values = _{ SOI ~ (tag_with_value ~ ("," ~ tag_with_value)*)? ~ EOI }
tag_with_value = { tag ~ ("=" ~ value)? }
tag = @{ name_chars+ }
value = @{ tag }



regex_chars_without_parentheses = _{ "." | "+" | "*" | "?" | "^" | "$" | "[" | "]" | "{" | "}" | "|" | "\\" }

// : is meant for tag groups or general naming
// _ is for general naming
// - is minus for integer values and general naming
// Don't use any regex chars for this
name_chars = _{ LETTER | NUMBER | ":" | "_" | "-" }

tag_chars_without_parentheses = _{ name_chars | regex_chars_without_parentheses }
regex_group = @{ "(" ~ tag_with_regex+ ~ ")" }
filesystem_char = _{ LETTER | MARK | NUMBER | CONNECTOR_PUNCTUATION | DASH_PUNCTUATION | INITIAL_PUNCTUATION | FINAL_PUNCTUATION | OTHER_PUNCTUATION | SYMBOL | SEPARATOR }
filesystem_path = _{ filesystem_char+ }

WHITESPACE = _{ " " }
